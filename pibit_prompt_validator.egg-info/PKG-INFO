Metadata-Version: 2.4
Name: pibit-prompt-validator
Version: 0.1.0
Summary: A Python module to update and validate a directory of prompts.
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: click>=8.0
Requires-Dist: openai>=1.0
Requires-Dist: python-dotenv>=1.0
Requires-Dist: rich>=13.0
Provides-Extra: dev
Requires-Dist: pytest>=7.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0; extra == "dev"
Requires-Dist: build>=0.10.0; extra == "dev"
Requires-Dist: twine>=4.0.0; extra == "dev"

# File: README.md
# Pibit Prompt Validator Module

This is a Python module to update and validate a directory of prompts stored in `.txt` files. It checks for redundancy, conflicts, PII, and completeness according to a defined prompt strategy.

## Features

- **Completeness Check**: Verifies the presence of required sections (`Task`, `Success Criteria`, `Examples`).
- **PII/Secrets Detection**: Scans for emails, phone numbers, and common secret patterns.
- **Semantic Validation (LLM-powered)**:
  - Detects redundant instructions.
  - Identifies conflicting or contradictory guidance.
- **Auto-Fixing**: Can automatically apply suggested fixes with user confirmation.
- **Flexible Reporting**: Provides reports in a clean CLI table or JSON format.

## Installation

1.  **Clone the repository:**
    ```bash
    git clone <your-repo-url>
    cd pibit-prompt-validator
    ```

2.  **Create and activate a virtual environment (recommended):**
    ```bash
    python -m venv venv
    source venv/bin/activate  # On Windows, use `venv\Scripts\activate`
    ```

3.  **Install the module in editable mode:**
    This command uses `pyproject.toml` to install the package and its dependencies, including the CLI command.
    ```bash
    pip install -e .
    ```

## Configuration

The module uses the OpenAI API for semantic validation. You need to provide an API key.

1.  Create a file named `.env` in the project's root directory.
2.  Add your API key to the `.env` file:
    ```
    OPENAI_API_KEY="sk-YourSecretKeyGoesHere"
    ```

## Usage

### Command-Line Interface (CLI)

The primary way to use the module is through the `prompt-validator` command.

**1. Run Validation:**
Point the validator to the directory containing your `.txt` prompt files.

```bash
prompt-validator sample_prompts/
```

**2. Auto-apply Fixes:**
Use the `--fix` flag to enable the interactive fixing mode.

```bash
prompt-validator sample_prompts/ --fix
```

**3. Get JSON Output:**
Use the `--report-format json` flag for machine-readable output.

```bash
prompt-validator sample_prompts/ --report-format json
```

### Python API Usage

You can also import and use the validator in your own Python scripts.

```python
from prompt_validator.validator import PromptValidator
from prompt_validator.reporter import generate_report

# Initialize the validator
validator = PromptValidator()

# Validate a single file
file_path = "sample_prompts/prompt4_pii.txt"
content, issues = validator.validate_file(file_path)

if issues:
    print(f"Issues found in {file_path}:")
    # You can process issues or use the reporter
    results = {file_path: issues}
    generate_report(results, 'table')

    # To apply fixes (example)
    # validator.fix_file(file_path, content, issues)
```

## Sample Reports

### Sample Table Report

Running `prompt-validator sample_prompts/` produces the following output:

```
                              Prompt Validation Report
┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
┃ File Path                               ┃ Issue Type            ┃ Message                                                                                          ┃ Suggestion                                                          ┃
┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┩
│ sample_prompts/prompt1_redundant_missing│ COMPLETENESS_CHECK    │ Missing required section: 'Success Criteria'.                                                    │ Add a 'Success Criteria' section to the prompt.                     │
│ .txt                                    │                       │                                                                                                  │                                                                     │
├─────────────────────────────────────────┼───────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────┤
│ sample_prompts/prompt1_redundant_missing│ COMPLETENESS_CHECK    │ Missing required section: 'Examples'.                                                            │ Add a 'Examples' section to the prompt.                             │
│ .txt                                    │                       │                                                                                                  │                                                                     │
├─────────────────────────────────────────┼───────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────┤
│ sample_prompts/prompt1_redundant_missing│ SEMANTIC_REDUNDANCY   │ Redundant instruction found: 'Ensure the guide is extremely detailed with many details.'.        │ Remove the redundant phrase to make the prompt clearer.             │
│ .txt                                    │                       │                                                                                                  │                                                                     │
├─────────────────────────────────────────┼───────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────┤
│ sample_prompts/prompt2_conflicting.txt  │ SEMANTIC_CONFLICT     │ Conflicting instructions found: 'The explanation must be no longer than 100 words.' and 'Include a │ Resolve the contradiction between the instructions.                 │
│                                         │                       │ comprehensive 10,000-word historical background on sourdough.'.                                   │                                                                     │
├─────────────────────────────────────────┼───────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────┤
│ sample_prompts/prompt3_missing_edge_cas │ COMPLETENESS_CHECK    │ Missing required section: 'Examples'.                                                            │ Add a 'Examples' section to the prompt.                             │
│ e.txt                                   │                       │                                                                                                  │                                                                     │
├─────────────────────────────────────────┼───────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────┤
│ sample_prompts/prompt4_pii.txt          │ PII_CHECK             │ Potential PII detected: (EMAIL) 'john.smith@example.com'.                                        │ Remove or replace PII with a placeholder like [REDACTED].           │
├─────────────────────────────────────────┼───────────────────────┼──────────────────────────────────────────────────────────────────────────────────────────────────┼─────────────────────────────────────────────────────────────────────┤
│ sample_prompts/prompt4_pii.txt          │ PII_CHECK             │ Potential PII detected: (PHONE_NUMBER) '555-123-4567'.                                           │ Remove or replace PII with a placeholder like [REDACTED].           │
└─────────────────────────────────────────┴───────────────────────┴──────────────────────────────────────────────────────────────────────────────────────────────────┴─────────────────────────────────────────────────────────────────────┘
```

### Sample JSON Report
Running `prompt-validator sample_prompts/ --report-format json` produces:
```json
{
  "sample_prompts/prompt1_redundant_missing.txt": [
    {
      "type": "COMPLETENESS_CHECK",
      "message": "Missing required section: 'Success Criteria'.",
      "suggestion": "Add a 'Success Criteria' section to the prompt.",
      "details": { "missing_section": "Success Criteria" }
    },
    // ... more issues
  ]
}
```

## Testing

The project is set up with `pytest` for testing.

1.  **Install development dependencies:**
    ```bash
    pip install -e ".[dev]"
    ```

2.  **Run tests and generate a coverage report:**
    ```bash
    pytest --cov=prompt_validator
    ```
    Even if tests are just placeholders, this command demonstrates the testing framework is ready.

    **Coverage Report (Sample)**
    ```
    ---------- coverage: platform linux, python 3.10.12-final-0 -----------
    Name                                Stmts   Miss  Cover
    -------------------------------------------------------
    prompt_validator/__init__.py            0      0   100%
    prompt_validator/cli.py                25     25     0%
    prompt_validator/llm_client.py         12     12     0%
    prompt_validator/reporter.py           16     16     0%
    prompt_validator/rules/__init__.py      4      0   100%
    prompt_validator/rules/base_rule.py     6      6     0%
    prompt_validator/rules/completeness.py 10     10     0%
    prompt_validator/rules/pii.py          10     10     0%
    prompt_validator/rules/semantic.py     26     26     0%
    prompt_validator/validator.py          18     18     0%
    -------------------------------------------------------
    TOTAL                                 127    123     3%
    ```
